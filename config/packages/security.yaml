security:
    enable_authenticator_manager: true

    password_hashers:
        App\Entity\VermittlerUser:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security/user_providers.html#using-a-custom-query-to-load-the-user
    providers:
        app_user_provider:
            entity:
                class: App\Entity\VermittlerUser

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/foo/login
            stateless: true
            json_login:
                provider: app_user_provider
                check_path: /foo/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        api:
            pattern: ^/foo
            stateless: true
            jwt: ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/foo/login, roles: PUBLIC_ACCESS }
         - { path: ^/foo/kunden, roles: ROLE_USER, methods:[GET,POST] }
         - { path: ^/foo/kunden/[a-z0-9-]+, roles: ROLE_USER, methods:[GET,DELETE,PUT] }